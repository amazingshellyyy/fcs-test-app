{"version":3,"sources":["App.js","reportWebVitals.js","index.js","DropZone.js"],"names":["App","className","DropZone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","FCS","require","MyDropzone","onDrop","useCallback","acceptedFiles","console","log","forEach","file","reader","FileReader","onabort","onerror","onload","binaryStr","result","buffer","Buffer","from","FCSfile","readAsArrayBuffer","useDropzone","getRootProps","getInputProps","isDragActive"],"mappings":"qOAWeA,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAACC,EAAA,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,+ECdMc,EAAMC,EAAQ,IAuCLC,IAtCf,WACE,IAAMC,EAASC,uBAAY,SAAAC,GAEzBC,QAAQC,IAAI,gBAAiBF,GAC7BA,EAAcG,SAAQ,SAACC,GACrB,IAAMC,EAAS,IAAIC,WAEnBD,EAAOE,QAAU,kBAAMN,QAAQC,IAAI,6BACnCG,EAAOG,QAAU,kBAAMP,QAAQC,IAAI,4BACnCG,EAAOI,OAAS,WAEdR,QAAQC,IAAI,SAAUG,GAEtB,IAAMK,EAAYL,EAAOM,OACzBV,QAAQC,IAAI,YAAaQ,GACzB,IAAME,EAASC,EAAOC,KAAKJ,EAAW,UACtCT,QAAQC,IAAI,SAAUU,GACtB,IAAMG,EAAU,IAAIpB,EAAI,GAAIiB,GAC5BX,QAAQC,IAAI,UAAWa,IAEzBd,QAAQC,IAAI,OAAQE,GACpBC,EAAOW,kBAAkBZ,QAE1B,IAvBiB,EAwBgCa,YAAY,CAACnB,WAA1DoB,EAxBa,EAwBbA,aAAcC,EAxBD,EAwBCA,cAAeC,EAxBhB,EAwBgBA,aAEpC,OACE,gDAASF,KAAT,cACE,qCAAWC,MAETC,EACE,wDACA,+F","file":"static/js/main.2289017a.chunk.js","sourcesContent":["import './App.css';\nimport DropZone from './DropZone'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DropZone/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nconst FCS = require('@amazyyy/fcs')\nfunction MyDropzone() {\n  const onDrop = useCallback(acceptedFiles => {\n    // Do something with the files\n    console.log('acceptedFiles', acceptedFiles)\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader()\n\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n      // Do whatever you want with the file contents\n        console.log('reader', reader)\n        // arrayBuffer\n        const binaryStr = reader.result\n        console.log('binaryStr', binaryStr)\n        const buffer = Buffer.from(binaryStr, 'binary')\n        console.log('buffer', buffer)\n        const FCSfile = new FCS({}, buffer)\n        console.log('FCSfile', FCSfile)\n      }\n      console.log('file', file)\n      reader.readAsArrayBuffer(file)\n    })\n  }, [])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()}>\n      <input {...getInputProps()} />\n      {\n        isDragActive ?\n          <p>Drop the files here ...</p> :\n          <p>Drag 'n' drop some files here, or click to select files</p>\n      }\n    </div>\n  )\n}\n\nexport default MyDropzone\n"],"sourceRoot":""}